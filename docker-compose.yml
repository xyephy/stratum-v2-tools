services:
  sv2d:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sv2d-daemon
    restart: unless-stopped
    ports:
      - "4254:4254"  # Stratum V2 port
      - "9090:9090"  # Metrics port
    volumes:
      - sv2d_data:/app/data
      - sv2d_logs:/app/logs
      - ./config:/app/config:ro
    environment:
      - RUST_LOG=info
      - SV2D_CONFIG_DIR=/app/config
      - SV2D_DATA_DIR=/app/data
      - SV2D_LOG_DIR=/app/logs
    healthcheck:
      test: ["CMD", "sv2-cli", "status", "--quiet"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - sv2d_network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  sv2d-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sv2d-web
    restart: unless-stopped
    command: ["sv2-web", "--config", "/app/config/web.toml"]
    ports:
      - "8080:8080"  # Web dashboard port
    volumes:
      - sv2d_logs:/app/logs
      - ./config:/app/config:ro
    environment:
      - RUST_LOG=info
    depends_on:
      sv2d:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - sv2d_network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: sv2d-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sv2d_network
    profiles:
      - monitoring

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: sv2d-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Change in production
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - sv2d_network
    profiles:
      - monitoring

volumes:
  sv2d_data:
    driver: local
  sv2d_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  sv2d_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16